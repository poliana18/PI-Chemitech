@model Chemitech.ViewModel.UsuarioEmpresaQuimica

@{
    ViewBag.Title = "Create";
    Layout = "~/Views/Shared/_LayoutEmpresaColeta.cshtml";
}

<h2 class="margen">Cadastro Químico</h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <div class="container">
            <div class="row">
                <div class="col-md-6">
                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                    <div class="form-group">
                        @Html.LabelFor(model => model.Nome, htmlAttributes: new { @class = "control-label col-md-6" })
                        <div class="col-md-12 caixaLaboratorioBombonaQuimico">
                            @Html.EditorFor(model => model.Nome, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Nome, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-12 caixaLaboratorioBombonaQuimico">
                            @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control Email" } })
                            @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
                            <span class='msg'></span>
                        </div>
                    </div>

                    @*<div class="form-group">
                            @Html.LabelFor(model => model.Senha, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-12 caixaLaboratorioBombonaQuimico">
                                @Html.EditorFor(model => model.Senha, new { htmlAttributes = new { @class = "form-control txtpassword" } })
                                @Html.ValidationMessageFor(model => model.Senha, "", new { @class = "text-danger" })
                                <span class='result'></span>
                            </div>
                        </div>*@

                    @*<div class="form-group">
                        @Html.LabelFor(model => model.Status, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-12 checkbox">
                            @Html.EditorFor(model => model.Status)
                            @Html.ValidationMessageFor(model => model.Status, "", new { @class = "text-danger" })
                        </div>
                    </div>*@
                    <div>
                        <div class="form-group">
                            <div class="col-md-6">
                                <label>Empresas químicas</label>
                            </div>
                            <div class="col-md-12 row">
                                @for (int i = 0; i < Model.Empresas.Count; i++)
                                {
                                <div class="col-md-6">
                                    @Html.HiddenFor(x => x.Empresas[i].Id)
                                    @Html.CheckBoxFor(w => w.Empresas[i].IdChecked)
                                    @Html.LabelFor(y => y.Empresas[i].IdChecked, Model.Empresas[i].Display)
                                    
                                </div>
                                }

                            </div>
                        </div>
                    </div>


                    <div class="form-group direito">
                        <div class="col-md-offset-2 col-md-10">
                            <input type="submit" value="Cadastrar" class="btn btn-default btn-cadastrar" />
                        </div>
                    </div>
                </div>
                <div class="col-md-6">
                    <img class="img" src="~/Imagens/ChemistrySet3.gif" />
                </div>
            </div>
        </div>
    </div>
}

@Scripts.Render("~/bundles/jquery")
@Scripts.Render("~/bundles/jqueryval")

<script>
    $(".Email").focusout(function () {
        var email = $(this).val();
        $.ajax({
            dataType: "json",
            type: "POST",
            url: "/UsuarioQuimicoes/ValidarEmail",
            data: { email },
            success: function (retorno) {
                if (retorno == "s") {
                    $(".botao").attr('disabled', 'disabled');
                    $(".msg").text("E-mail já cadastrado");
                    $(".msg").removeAttr("class");
                    $(".msg").attr("class", "text-danger");
                }
                else {
                    $(".botao").removeAttr("disabled");
                    $(".msg").text("E-mail validado");
                    $(".msg").removeAttr("class");
                    $(".msg").attr("class", "text-success");
                }
            }
        });
    });
</script>

<script src="~/Scripts/jquery-1.10.2.min.js"></script>
<script src="~/Scripts/passwordStrengthMeter.js"></script>

<script language="javascript">
    var result = "";
    jQuery(document).ready(function () {
        $('.txtpassword').keyup(function () {
            $('.result').html(passwordStrength($('.txtpassword').val(), ""))
            result = $('.result').html();
            if (result == "Acrescenta letras maiúsculas e minúsculas") {
                $('.result').attr({ 'style': 'color:Red;' });
            }
            if (result == "Números") {
                $('.result').attr({ 'style': 'color:Olive;' });
            }
            if (result == "Senha forte") {
                $('.result').attr({ 'style': 'color:Green;' });
            }
        })
    })
    function ValidateForm() {
        if (result == "Boa" || result == "Senha forte") {
            return true;
        }
        else {
            TempData["MSG"] = "warning|A senha é fraca";
            return false;
        }
    }
</script>